{"version":3,"file":"static/js/235.71ad5049.chunk.js","mappings":"qLACA,GAAgB,OAAS,2BAA2B,KAAO,yBAAyB,MAAQ,0BAA0B,OAAS,4B,iDCoF/H,MA7EA,YAAwD,IAAlCA,EAAiC,EAAjCA,SAAiC,IAAvBC,YAAAA,OAAuB,SAC/CC,GAAeC,EAAAA,EAAAA,UACfC,GAAgBD,EAAAA,EAAAA,UAChBE,GAAmBF,EAAAA,EAAAA,UACnBG,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAe3B,OACE,iCACE,kBAAMC,UAAWC,EAAAA,KAAUV,SAfV,SAAAW,GACnBA,EAAMC,iBAEN,IAAMC,GAAQ,mBACPZ,GAAe,CAAEa,KAAMZ,EAAaa,QAAQC,QADrC,IAEZC,MAAOb,EAAcW,QAAQC,MAC7BE,SAAUb,EAAiBU,QAAQC,QAErChB,EAASa,GAETF,EAAMQ,OAAOC,OACd,EAIG,WACE,eAAIX,UAAWC,EAAAA,OAAf,SAA4BT,EAAc,SAAW,YACpDA,EAAc,MACb,mBAAOQ,UAAWC,EAAAA,MAAlB,WACE,iBAAMD,UAAWC,EAAAA,KAAjB,SAA2B,YAC3B,kBACED,UAAWC,EAAAA,MACXW,KAAK,OACLP,KAAK,OACLQ,YAAa,kBACbC,IAAKrB,EACLsB,UAAQ,QAId,mBAAOf,UAAWC,EAAAA,MAAlB,WACE,iBAAMD,UAAWC,EAAAA,KAAjB,SAA2B,cAC3B,kBACED,UAAWC,EAAAA,MACXW,KAAK,QACLP,KAAK,QACLQ,YAAa,oBACbC,IAAKnB,EACLoB,UAAQ,QAGZ,mBAAOf,UAAWC,EAAAA,MAAlB,WACE,iBAAMD,UAAWC,EAAAA,KAAjB,SAA2B,gBAC3B,kBACED,UAAWC,EAAAA,MACXW,KAAK,WACLP,KAAK,WACLW,UAAW,EACXH,YAAa,sBACbC,IAAKlB,EACLmB,UAAQ,QAIZ,mBACEf,UAAWC,EAAAA,OACXgB,SAAqB,YAAXpB,EACVe,KAAK,SAHP,SAKGpB,EAAc,UAAY,eAGnB,YAAXK,IAAwB,SAACqB,EAAA,EAAD,MAG9B,C,2HCjCD,UAnCmB,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAazB,EAAAA,EAAAA,IAAY0B,EAAAA,IACzBC,GAAQ3B,EAAAA,EAAAA,IAAY4B,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACHJ,GAELF,EAAS,YACV,GAAE,CAACE,EAAYF,KAEhBM,EAAAA,EAAAA,YAAU,WACJF,GACFG,EAAAA,GAAAA,MAAY,8BAEf,GAAE,CAACH,IAMJ,OACE,2BACE,8BACE,4BACE,eAAIzB,UAAWC,EAAAA,EAAAA,OAAf,SAA2B,kBAChB,OAAVwB,IAAkB,yBAAG,+BAA6BA,MACnD,SAAC,IAAD,CAAYlC,SAVG,SAAAa,GACrBe,GAASU,EAAAA,EAAAA,IAAgBzB,GAC1B,UAaF,C,qBC3CD,KAAgB,OAAS,oB","sources":["webpack://react-homework-template/./src/components/Forms/SignUpForm/SignUpForm.module.css?b730","components/Forms/SignUpForm/SignUpForm.jsx","pages/SignUpPage.jsx","webpack://react-homework-template/./src/components/App/App.module.css?583a"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"SignUpForm_header__-2CZD\",\"name\":\"SignUpForm_name__eAdis\",\"input\":\"SignUpForm_input__nDjJF\",\"button\":\"SignUpForm_button__ktzxP\"};","import css from '../SignUpForm/SignUpForm.module.css';\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectStatus } from 'redux/auth/selectors';\n\nimport { Loader } from 'components/Loader/Loader';\n\nfunction SignUpForm({ onSubmit, isLoginForm = false }) {\n  const nameInputRef = useRef();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const status = useSelector(selectStatus);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const formData = {\n      ...(!isLoginForm && { name: nameInputRef.current.value }),\n      email: emailInputRef.current.value,\n      password: passwordInputRef.current.value,\n    };\n    onSubmit(formData);\n\n    event.target.reset();\n  };\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <h2 className={css.header}>{isLoginForm ? 'Log In' : 'Sign Up'}</h2>\n        {isLoginForm ? null : (\n          <label className={css.label}>\n            <span className={css.name}>Name: </span>\n            <input\n              className={css.input}\n              type=\"text\"\n              name=\"name\"\n              placeholder={'Enter your name'}\n              ref={nameInputRef}\n              required\n            />\n          </label>\n        )}\n        <label className={css.label}>\n          <span className={css.name}>E-mail: </span>\n          <input\n            className={css.input}\n            type=\"email\"\n            name=\"email\"\n            placeholder={'Enter your e-mail'}\n            ref={emailInputRef}\n            required\n          />\n        </label>\n        <label className={css.label}>\n          <span className={css.name}>Password: </span>\n          <input\n            className={css.input}\n            type=\"password\"\n            name=\"password\"\n            minLength={7}\n            placeholder={'Enter your password'}\n            ref={passwordInputRef}\n            required\n          />\n        </label>\n\n        <button\n          className={css.button}\n          disabled={status === 'pending'}\n          type=\"submit\"\n        >\n          {isLoginForm ? 'Sign In' : 'Sign Up'}\n        </button>\n      </form>\n      {status === 'pending' && <Loader />}\n    </>\n  );\n}\n\nSignUpForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SignUpForm;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom/dist';\n\nimport { registerRequest } from 'redux/auth/operations';\nimport { selectAuthError, selectIsLoggedIn } from 'redux/auth/selectors';\n\nimport SignUpForm from 'components/Forms/SignUpForm/SignUpForm';\nimport { toast } from 'react-toastify';\nimport css from '../components/App/App.module.css';\n\nconst SignUpPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const error = useSelector(selectAuthError);\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n\n    navigate('/contacts');\n  }, [isLoggedIn, navigate]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error('Sorry, something went wrong');\n    }\n  }, [error]);\n\n  const handleRegister = formData => {\n    dispatch(registerRequest(formData));\n  };\n\n  return (\n    <main>\n      <section>\n        <div>\n          <h1 className={css.hidden}>Register page</h1>\n          {error !== null && <p>Oops, some error occured... {error}</p>}\n          <SignUpForm onSubmit={handleRegister} />\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default SignUpPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"hidden\":\"App_hidden__J7bDI\"};"],"names":["onSubmit","isLoginForm","nameInputRef","useRef","emailInputRef","passwordInputRef","status","useSelector","selectStatus","className","css","event","preventDefault","formData","name","current","value","email","password","target","reset","type","placeholder","ref","required","minLength","disabled","Loader","dispatch","useDispatch","navigate","useNavigate","isLoggedIn","selectIsLoggedIn","error","selectAuthError","useEffect","toast","registerRequest"],"sourceRoot":""}